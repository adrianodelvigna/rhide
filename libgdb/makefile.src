# Copyright (C) 1996-1998 Robert H”hne, see COPYING.RH for details 
# This file is part of RHIDE. 
#

SHELL=/bin/sh

srcdir=$(RHIDESRC)/libgdb
VPATH=$(srcdir)

project=

src_files=Makefile makefile.src
po_files=
cfg_files=
update_files=

subdirs=
po_subdirs=

include $(RHIDESRC)/common.mak

ifeq ($(GDB_SRC),)
ifeq ($(rhide_OS),DJGPP)
GDB_SRC=$(DJDIR)/gnu/gdb-4.18
else
GDB_SRC=/usr/src/packages/BUILD/gdb-4.18
endif
endif

ifeq ($(GDB_OBJ),)
GDB_OBJ=$(GDB_SRC)
endif

ifeq ($(strip $(rhide_OS)),DJGPP)
OS_CFLAGS=-O2
OS_FLAGS=
MMALLOC_INC=
MMALLOC_CFLAGS=-DNO_MMALLOC -DNO_MMALLOC_CHECK
MMALLOC_LIB=
MMALLOC_LIB_DIR=
OS_FLAGS+=MMALLOC=$(MMALLOC) MMALLOC_CFLAGS="$(MMALLOC_CFLAGS)"
CHECKS=
EXCLUDE_REGEX=| sed -e '/main.o/d'
endif

ifeq ($(strip $(rhide_OS)),Linux)
OS_CFLAGS=-DHAVE_CONFIG_H -O2 -DNO_MMALLOC
#MMALLOC=../mmalloc/libmmalloc.a
#MMALLOC_INC=o_gdb/mmalloc s_gdb/mmalloc
CHECKS=
EXCLUDE_REGEX=| sed -e '/.*gnu-regex.*/d' -e '/main.o/d'
endif

MMALLOC_LIB=$(subst ..,$(GDB_OBJ),$(MMALLOC))
MMALLOC_LIB_DIR=$(subst /libmmalloc.a,,$(MMALLOC_LIB))

vpath %.a $(GDB_OBJ)/bfd $(GDB_OBJ)/libiberty $(GDB_OBJ)/opcodes $(GDB_OBJ)/readline $(MMALLOC_LIB_DIR)

_INCS=o_gdb/gdb s_gdb/gdb s_gdb/include s_gdb/gdb/config \
	o_gdb/bfd s_gdb/bfd \
	o_gdb/opcodes s_gdb/opcodes \
	o_gdb/readline s_gdb/readline \
	o_gdb/libiberty s_gdb/libiberty \
	$(MMALLOC_INC)

INCS=$(subst s_gdb,$(GDB_SRC),$(subst o_gdb,$(GDB_OBJ),$(_INCS)))

INC_PATH=$(addprefix -I,$(INCS))

all:: libgdb.h libgdb.a

libgdb.c: Makefile
	echo '#include <defs.h>' > libgdb.c
	echo '#include <breakpoint.h>' >> libgdb.c
	echo '#include <symtab.h>' >> libgdb.c
	echo '#include <symfile.h>' >> libgdb.c
	echo '#include <objfiles.h>' >> libgdb.c
	echo '#include <inferior.h>' >> libgdb.c
	echo '#include <gnu-regex.h>' >> libgdb.c
	echo '#include <expression.h>' >> libgdb.c
	echo '#include <language.h>' >> libgdb.c
	echo '#include <complaints.h>' >> libgdb.c
	echo '#include <coff/internal.h>' >> libgdb.c
	echo '#include <libcoff.h>' >> libgdb.c
	echo '#include <ctype.h>' >> libgdb.c
	echo '#include <string.h>' >> libgdb.c
	echo '#include <buildsym.h>' >> libgdb.c
	echo '#include <gdb-stabs.h>' >> libgdb.c
	echo '#include <stabsread.h>' >> libgdb.c
	echo '#include <gdbcmd.h>' >> libgdb.c
	echo '#include <setjmp.h>' >> libgdb.c
	echo '#include <demangle.h>' >> libgdb.c
	echo '#include <annotate.h>' >> libgdb.c
	echo '#include <top.h>' >> libgdb.c
	echo '#include <floatformat.h>' >> libgdb.c

LIBGDB_FLAGS+=$(OS_FLAGS)
override CFLAGS+=$(OS_CFLAGS)

$(GDB_OBJ)/Makefile:
	cd $(GDB_OBJ) && $(GDB_SRC)/configure

$(GDB_OBJ)/bfd/bfd.h: $(GDB_OBJ)/Makefile
	$(MAKE) -C $(dir $@) $(notdir $@)

ifneq ($(LIBGDB_H),)
libgdb.h: $(LIBGDB_H)
	ln -sf $(LIBGDB_H) libgdb.h
else
libgdb.h: $(GDB_OBJ)/bfd/bfd.h libgdb.c
	gcc -E -P $(INC_PATH) $(CFLAGS) $(MMALLOC_CFLAGS) libgdb.c \
	  | sed -e '/^[ 	]*$$/d' > libgdb.h
	gcc -E -P -dM $(INC_PATH) $(CFLAGS) $(MMALLOC_CFLAGS) libgdb.c \
	  | sed -e '/^[ 	]*$$/d' >> libgdb.h
endif

gdb.t: libgdb-files
	printf "%s\n" $(shell cat $<) | sed -n -e 's,^.*\.o,$(GDB_OBJ)/gdb/&,p' $(EXCLUDE_REGEX) > $@

%.t: %.a
	ar t $< | sed -e 's,^.*\.o,$(dir $<)&,' > $@

libbfd.t: $(GDB_OBJ)/bfd/libbfd.a
libiberty.t: $(GDB_OBJ)/libiberty/libiberty.a
libopcodes.t: $(GDB_OBJ)/opcodes/libopcodes.a
libreadline.t: $(GDB_OBJ)/readline/libreadline.a
libmmalloc.t: $(GDB_OBJ)/mmalloc/libmmalloc.a

$(GDB_OBJ)/%.a:
#	$(MAKE) -C $(dir $@) $(notdir $@) CFLAGS="$(CFLAGS)" $(LIBGDB_FLAGS)
	$(MAKE) -C $(dir $@) CFLAGS="$(CFLAGS)" $(LIBGDB_FLAGS)

libgdb-files: force
	$(MAKE) -C $(GDB_OBJ) CFLAGS="$(CFLAGS)" $(LIBGDB_FLAGS)
	ls $(GDB_OBJ)/gdb/*.o | sed s,$(GDB_OBJ)/gdb/,,g > $@

T_FILES=libbfd.t libiberty.t libopcodes.t libreadline.t $(notdir $(subst .a,.t,$(MMALLOC_LIB))) gdb.t

list: $(T_FILES)

ifneq ($(LIBGDB_A),)
libgdb.a: $(LIBGDB_A)
	ln -sf $(LIBGDB_A) libgdb.a
else
libgdb.a: $(CHECKS) libgdb.h list
	rm -f libgdb.a
# do not use any xmalloc.o, because it is defined in utils.o
	ar rcs $@ $(shell cat $(T_FILES) | sed -e '/.*xmalloc.*/d')
	rm -f $(T_FILES) libgdb-files
endif

force:
